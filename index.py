import sys
import numpy
numpy.set_printoptions(threshold=sys.maxsize)

from nimblenet.activation_functions import sigmoid_function, elliot_function
from nimblenet.cost_functions import cross_entropy_cost
from nimblenet.learning_algorithms import backpropagation, resilient_backpropagation
from nimblenet.data_structures import Instance
from nimblenet.neuralnet import NeuralNet
dataset        = [ Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 2, 1, 38 ], [ 0 ] ),
  Instance([ 3, 2, 94 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 2, 1, 74 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 0, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 30 ], [ 0 ] ),
  Instance([ 3, 2, 26 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 58 ], [ 0 ] ),
  Instance([ 2, 1, 6 ], [ 0 ] ),
  Instance([ 1, 1, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 90 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 50 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 78 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 66 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 2, 1, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 62 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 66 ], [ 0 ] ),
  Instance([ 0, 2, 50 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 14 ], [ 0 ] ),
  Instance([ 0, 2, 30 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 18 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 1, 1, 6 ], [ 0 ] ),
  Instance([ 0, 2, 30 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 2, 1, 6 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 0, 2, 50 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 2, 1, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 2, 1, 22 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 58 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 90 ], [ 0 ] ),
  Instance([ 3, 2, 38 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 1, 1, 14 ], [ 0 ] ),
  Instance([ 0, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 42 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 30 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 50 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 2, 1, 90 ], [ 0 ] ),
  Instance([ 3, 2, 90 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 62 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 50 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 70 ], [ 0 ] ),
  Instance([ 3, 2, 30 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 70 ], [ 0 ] ),
  Instance([ 3, 2, 90 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 2, 4, 30 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 62 ], [ 0 ] ),
  Instance([ 3, 2, 54 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 2, 1, 82 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 1, 1, 26 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 1, 1, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 1, 1, 46 ], [ 0 ] ),
  Instance([ 2, 1, 30 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 50 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 50 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 62 ], [ 0 ] ),
  Instance([ 0, 2, 74 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 90 ], [ 0 ] ),
  Instance([ 3, 2, 50 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 2, 4, 82 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 82 ], [ 0 ] ),
  Instance([ 0, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 38 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 90 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 26 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 2, 1, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 50 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 90 ], [ 0 ] ),
  Instance([ 0, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 94 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 4, 3, 2 ], [ 0 ] ),
  Instance([ 3, 2, 90 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 94 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 78 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 14 ], [ 0 ] ),
  Instance([ 2, 1, 2 ], [ 0 ] ),
  Instance([ 0, 2, 38 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 30 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 50 ], [ 0 ] ),
  Instance([ 2, 1, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 26 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 30 ], [ 0 ] ),
  Instance([ 3, 2, 30 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 2, 1, 54 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 0, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 1, 1, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 2, 1, 2 ], [ 0 ] ),
  Instance([ 2, 1, 14 ], [ 0 ] ),
  Instance([ 3, 2, 50 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 30 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 62 ], [ 0 ] ),
  Instance([ 2, 1, 74 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 66 ], [ 0 ] ),
  Instance([ 0, 2, 26 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 30 ], [ 0 ] ),
  Instance([ 3, 2, 82 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 2, 4, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 2, 1, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 94 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 54 ], [ 0 ] ),
  Instance([ 3, 2, 90 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 62 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 34 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 62 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 0, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 14 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 2, 1, 2 ], [ 0 ] ),
  Instance([ 2, 4, 14 ], [ 0 ] ),
  Instance([ 0, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 6 ], [ 0 ] ),
  Instance([ 3, 2, 2 ], [ 0 ] ),
  Instance([ 0, 0, 38 ], [ 1 ] ),
  Instance([ 1, 1, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 1, 1, 38 ], [ 1 ] ),
  Instance([ 3, 2, 38 ], [ 1 ] ),
  Instance([ 4, 3, 38 ], [ 1 ] ),
  Instance([ 1, 1, 38 ], [ 1 ] ),
  Instance([ 2, 1, 10 ], [ 1 ] ),
  Instance([ 1, 1, 10 ], [ 1 ] ),
  Instance([ 1, 1, 10 ], [ 1 ] ),
  Instance([ 2, 4, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 2, 4, 10 ], [ 1 ] ),
  Instance([ 2, 4, 10 ], [ 1 ] ),
  Instance([ 1, 1, 10 ], [ 1 ] ),
  Instance([ 1, 1, 10 ], [ 1 ] ),
  Instance([ 2, 4, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 1, 1, 10 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 2, 1, 10 ], [ 1 ] ),
  Instance([ 1, 1, 10 ], [ 1 ] ),
  Instance([ 2, 1, 10 ], [ 1 ] ),
  Instance([ 2, 4, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 4, 3, 38 ], [ 1 ] ),
  Instance([ 1, 1, 38 ], [ 1 ] ),
  Instance([ 2, 4, 38 ], [ 1 ] ),
  Instance([ 2, 4, 38 ], [ 1 ] ),
  Instance([ 1, 1, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 2, 4, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 2, 1, 38 ], [ 1 ] ),
  Instance([ 2, 4, 38 ], [ 1 ] ),
  Instance([ 2, 4, 38 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 46 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 0, 0, 58 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 0, 0, 90 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 14 ], [ 1 ] ),
  Instance([ 2, 4, 2 ], [ 1 ] ),
  Instance([ 0, 0, 62 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 90 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 0, 2, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 58 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 90 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 0, 0, 82 ], [ 1 ] ),
  Instance([ 3, 2, 14 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 62 ], [ 1 ] ),
  Instance([ 1, 1, 30 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 30 ], [ 1 ] ),
  Instance([ 1, 1, 26 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 30 ], [ 1 ] ),
  Instance([ 1, 1, 62 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 0, 0, 50 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 30 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 2, 4, 50 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 50 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 2, 1, 30 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 46 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 14 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 54 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 1, 1, 18 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 78 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 50 ], [ 1 ] ),
  Instance([ 1, 1, 86 ], [ 1 ] ),
  Instance([ 0, 2, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 70 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 4, 3, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 70 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 1, 1, 30 ], [ 1 ] ),
  Instance([ 2, 4, 90 ], [ 1 ] ),
  Instance([ 0, 0, 50 ], [ 1 ] ),
  Instance([ 2, 4, 14 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 30 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 26 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 0, 2, 14 ], [ 1 ] ),
  Instance([ 2, 1, 66 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 2, 4, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 86 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 82 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 4, 3, 74 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 4, 3, 6 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 2, 1, 90 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 4, 3, 2 ], [ 1 ] ),
  Instance([ 2, 1, 14 ], [ 1 ] ),
  Instance([ 3, 5, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 10 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 0, 2, 6 ], [ 1 ] ),
  Instance([ 1, 1, 90 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 1, 1, 90 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 4, 3, 6 ], [ 1 ] ),
  Instance([ 0, 2, 2 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 82 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 1, 1, 94 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 2, 4, 90 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 2 ], [ 1 ] ),
  Instance([ 2, 1, 14 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 70 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 2, 1, 86 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 2, 4, 82 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 74 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 1, 1, 22 ], [ 1 ] ),
  Instance([ 1, 1, 38 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 1, 1, 62 ], [ 1 ] ),
  Instance([ 1, 1, 62 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 30 ], [ 1 ] ),
  Instance([ 2, 1, 30 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 86 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 14 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 1, 1, 10 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 2, 1, 18 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 3, 6, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 58 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 58 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 62 ], [ 1 ] ),
  Instance([ 0, 0, 18 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 1, 1, 62 ], [ 1 ] ),
  Instance([ 2, 1, 82 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 2 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 1, 1, 78 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 1, 1, 58 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 2, 1, 14 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 3, 2, 82 ], [ 1 ] ),
  Instance([ 0, 0, 62 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 90 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 54 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 1, 1, 90 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 26 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 4, 2 ], [ 1 ] ),
  Instance([ 2, 1, 14 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 14 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 0, 0, 94 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 14 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 50 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 0, 0, 70 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 7, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 2, 1, 62 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 30 ], [ 1 ] ),
  Instance([ 2, 4, 14 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 70 ], [ 1 ] ),
  Instance([ 2, 1, 14 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 3, 2, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 62 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 62 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 0, 0, 42 ], [ 1 ] ),
  Instance([ 3, 2, 14 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 74 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 1, 1, 30 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 38 ], [ 1 ] ),
  Instance([ 3, 2, 82 ], [ 1 ] ),
  Instance([ 1, 1, 58 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 70 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 66 ], [ 1 ] ),
  Instance([ 2, 1, 50 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 2, 1, 18 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 10 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 0, 0, 2 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 78 ], [ 1 ] ),
  Instance([ 1, 1, 14 ], [ 1 ] ),
  Instance([ 2, 4, 2 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 0, 2, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 2 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 4, 2 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 82 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 2 ], [ 1 ] ),
  Instance([ 1, 1, 50 ], [ 1 ] ),
  Instance([ 2, 4, 6 ], [ 1 ] ),
  Instance([ 1, 1, 30 ], [ 1 ] ),
  Instance([ 1, 1, 26 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 14 ], [ 1 ] ),
  Instance([ 3, 2, 2 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ),
  Instance([ 1, 1, 6 ], [ 1 ] ),
  Instance([ 2, 1, 50 ], [ 1 ] ),
  Instance([ 0, 0, 6 ], [ 1 ] ),
  Instance([ 2, 1, 6 ], [ 1 ] ) ]

settings       = {
    "n_inputs" : 3,
    "layers"   : [  (5, sigmoid_function), (1, sigmoid_function) ]
}
network        = NeuralNet( settings )
training_set   = dataset
test_set       = dataset
cost_function  = cross_entropy_cost
resilient_backpropagation(
        network,           # the network to train
        training_set,      # specify the training set
        test_set,          # specify the test set
        cost_function,     # specify the cost function to calculate error
        max_iterations = 20000,
    )

prediction_set = dataset
results = network.predict( prediction_set )
my_formatted_list = [ '%.2f' % elem for elem in results ]
print(my_formatted_list)

"""
['0.09', '0.10', '0.09', '0.89', '0.01', '0.10', '0.78', '0.08', '0.08', '0.10', '0.01', '0.08', '0.10', '0.08', '0.08', '0.10', '0.09', '0.08', '0.10', '0.09', '0.09', '0.08', '0.06', '0.09', '0.09', '0.09', '0.03', '0.03', '0.08', '0.09', '0.08', '0.09', '0.01', '0.93', '0.97', '0.09', '0.01', '0.09', '0.09', '0.09', '0.09', '0.10', '0.08', '0.10', '0.08', '0.93', '0.09', '0.06', '0.09', '0.08', '0.06', '0.01', '0.09', '0.10', '0.01', '0.08', '0.25', '0.01', '0.10', '0.10', '0.09', '0.09', '0.08', '0.08', '0.08', '0.08', '0.06', '0.09', '0.06', '0.06', '0.10', '0.08', '0.14', '0.08', '0.08', '0.09', '0.97', '0.01', '0.09', '0.09', '0.09', '0.09', '0.06', '0.09', '0.09', '0.10', '0.09', '0.09', '0.93', '0.14', '0.01', '0.09', '0.08', '0.81', '0.08', '0.08', '0.09', '0.87', '0.09', '0.08', '0.09', '0.09', '0.09', '0.10', '0.02', '0.06', '0.08', '0.14', '0.08', '0.09', '0.09', '0.06', '0.08', '0.08', '0.08', '0.08', '0.10', '0.09', '0.09', '0.08', '0.08', '0.08', '0.09', '0.09', '0.95', '0.25', '0.09', '0.09', '0.01', '0.09', '0.03', '0.08', '0.08', '0.10', '0.08', '0.09', '0.09', '0.09', '0.14', '0.14', '0.08', '0.06', '0.63', '0.02', '0.09', '0.08', '0.08', '0.10', '0.09', '0.09', '0.08', '0.09', '0.08', '0.08', '0.09', '0.09', '0.08', '0.08', '0.09', '0.09', '0.08', '0.09', '0.08', '0.09', '0.08', '0.08', '0.08', '0.08', '0.09', '0.08', '0.08', '0.09', '0.09', '0.10', '0.10', '0.03', '0.09', '0.10', '0.08', '0.08', '0.09', '0.10', '0.02', '0.09', '0.09', '0.09', '0.08', '0.08', '0.09', '0.09', '0.08', '0.08', '0.09', '0.08', '0.06', '0.08', '0.09', '0.08', '0.98', '0.08', '0.08', '0.10', '0.09', '0.08', '0.09', '0.10', '0.09', '0.10', '0.08', '0.08', '0.09', '0.09', '0.08', '0.09', '0.08', '0.72', '0.14', '0.08', '0.08', '0.14', '0.08', '0.10', '0.09', '0.10', '0.10', '0.06', '0.08', '0.08', '0.10', '0.08', '0.08', '0.08', '0.08', '0.09', '0.09', '0.08', '0.08', '0.09', '0.09', '0.08', '0.09', '0.89', '0.08', '0.09', '0.10', '0.08', '0.06', '0.09', '0.08', '0.08', '0.14', '0.97', '0.09', '0.98', '0.86', '0.09', '0.09', '0.10', '0.08', '0.09', '0.09', '0.08', '0.08', '0.09', '0.09', '0.09', '0.08', '0.09', '0.09', '0.09', '0.08', '0.08', '0.14', '0.10', '0.01', '0.08', '0.08', '0.08', '0.09', '0.09', '0.02', '0.09', '0.08', '0.06', '0.81', '0.09', '0.09', '0.01', '0.01', '0.08', '0.08', '0.08', '0.09', '0.06', '0.09', '0.08', '0.09', '0.10', '0.10', '0.08', '0.02', '0.09', '0.09', '0.09', '0.08', '0.06', '0.09', '0.09', '0.08', '0.10', '0.14', '0.09', '0.09', '0.09', '0.06', '0.02', '0.09', '0.09', '0.81', '0.08', '0.14', '0.09', '0.14', '0.09', '0.09', '0.08', '0.08', '0.09', '0.02', '0.01', '0.01', '0.10', '0.08', '0.09', '0.73', '0.02', '0.08', '0.08', '0.09', '0.01', '0.09', '0.10', '0.08', '0.06', '0.10', '0.25', '0.81', '0.01', '0.14', '0.09', '0.10', '0.08', '0.09', '0.10', '0.03', '0.09', '0.09', '0.09', '0.93', '0.09', '0.08', '0.03', '0.06', '0.08', '0.10', '0.03', '0.03', '0.10', '0.09', '0.76', '0.08', '0.08', '0.97', '0.08', '0.97', '0.10', '0.06', '0.09', '0.06', '0.09', '0.08', '0.06', '0.08', '0.09', '0.08', '0.08', '0.81', '0.90', '0.09', '0.09', '0.08', '0.09', '0.03', '0.10', '0.08', '0.14', '0.09', '0.08', '0.08', '0.10', '0.78', '0.06', '0.09', '0.06', '0.09', '0.08', '0.10', '0.02', '0.09', '0.10', '0.10', '0.03', '0.10', '0.08', '0.08', '0.08', '0.08', '0.10', '0.08', '0.09', '0.93', '0.09', '0.06', '0.09', '0.08', '0.08', '0.09', '0.10', '0.10', '0.08', '0.09', '0.09', '0.08', '0.09', '0.08', '0.09', '0.09', '0.09', '0.09', '0.08', '0.14', '0.08', '0.08', '0.08', '0.08', '0.09', '0.93', '0.08', '0.09', '0.08', '0.14', '0.09', '0.08', '0.08', '0.08', '0.06', '0.09', '0.01', '0.08', '0.09', '0.02', '0.06', '0.08', '0.09', '0.09', '0.09', '0.10', '0.09', '0.08', '0.09', '0.08', '0.08', '0.10', '0.08', '0.09', '0.09', '0.09', '0.08', '0.08', '0.08', '0.08', '0.05', '0.06', '0.10', '0.06', '0.09', '0.08', '0.10', '0.06', '0.06', '0.14', '0.08', '0.08', '0.81', '0.93', '0.10', '0.09', '0.09', '0.08', '0.99', '0.95', '0.89', '0.95', '0.06', '0.98', '0.95', '0.92', '0.99', '0.99', '0.98', '0.89', '0.89', '0.89', '0.93', '0.93', '0.99', '0.99', '0.98', '0.89', '0.99', '0.89', '0.92', '0.99', '0.92', '0.98', '0.89', '0.98', '0.95', '0.98', '0.98', '0.95', '0.89', '0.98', '0.89', '0.89', '0.89', '0.89', '0.98', '0.98', '0.97', '0.98', '0.93', '1.00', '0.97', '0.97', '0.99', '0.93', '0.97', '0.93', '0.97', '0.93', '0.97', '0.97', '1.00', '0.95', '0.95', '0.97', '0.97', '0.93', '0.93', '1.00', '0.93', '0.81', '0.93', '0.96', '0.97', '0.09', '0.10', '0.93', '0.93', '0.97', '0.99', '0.09', '0.97', '0.97', '0.93', '1.00', '0.93', '0.97', '0.99', '1.00', '0.14', '0.97', '0.99', '0.90', '0.81', '0.97', '0.90', '0.89', '0.97', '0.86', '0.99', '0.81', '0.09', '0.08', '1.00', '0.97', '0.93', '0.81', '0.95', '0.97', '0.93', '0.97', '0.93', '0.97', '0.93', '0.90', '0.97', '0.93', '0.98', '0.97', '0.97', '0.97', '0.97', '0.98', '0.97', '0.99', '0.99', '0.97', '0.08', '0.99', '0.86', '0.99', '0.97', '0.98', '0.97', '0.93', '0.97', '0.09', '0.93', '0.97', '0.97', '0.14', '0.93', '0.95', '0.97', '0.76', '0.97', '0.97', '0.93', '0.88', '0.97', '0.99', '0.97', '0.97', '0.97', '0.98', '0.97', '0.93', '0.93', '0.97', '0.99', '0.93', '0.98', '0.97', '0.10', '0.97', '0.93', '0.81', '0.97', '0.93', '0.97', '0.81', '0.97', '0.97', '0.82', '0.99', '0.93', '0.99', '0.99', '0.81', '0.81', '0.95', '0.08', '0.90', '0.81', '1.00', '0.93', '0.99', '0.90', '0.97', '0.81', '0.89', '0.08', '0.09', '0.97', '0.97', '0.99', '0.25', '0.82', '0.97', '0.09', '0.97', '0.81', '0.97', '0.97', '0.97', '0.99', '0.08', '0.93', '0.97', '0.93', '0.81', '0.97', '0.97', '0.98', '0.99', '0.97', '0.93', '0.93', '0.99', '0.96', '0.97', '0.82', '0.97', '0.63', '0.93', '0.97', '0.73', '0.90', '0.93', '0.93', '0.99', '0.81', '0.99', '0.10', '0.96', '0.08', '0.99', '0.99', '0.96', '0.81', '0.97', '0.99', '0.82', '0.06', '0.81', '0.97', '0.09', '0.93', '0.81', '0.99', '0.93', '0.96', '0.97', '0.95', '0.81', '0.93', '0.99', '0.09', '0.97', '0.93', '0.99', '0.97', '0.93', '0.90', '0.93', '0.09', '0.93', '0.10', '0.97', '0.97', '0.68', '0.97', '0.81', '0.81', '0.97', '0.78', '0.93', '0.97', '0.88', '0.95', '0.09', '0.93', '0.99', '0.99', '0.99', '0.97', '0.97', '0.90', '0.86', '0.97', '0.97', '0.68', '0.97', '0.90', '0.08', '0.99', '0.97', '0.95', '0.93', '0.93', '0.09', '0.93', '0.93', '0.93', '0.95', '0.88', '0.93', '0.93', '0.93', '0.93', '0.97', '0.97', '0.81', '0.95', '0.99', '0.99', '0.97', '0.97', '0.99', '0.97', '0.93', '0.99', '0.99', '0.99', '0.93', '0.93', '0.08', '0.99', '0.72', '0.97', '0.93', '0.97', '0.95', '0.81', '0.97', '0.97', '0.99', '0.95', '0.98', '0.97', '0.99', '0.99', '0.97', '0.97', '0.97', '0.93', '0.93', '0.97', '0.97', '0.97', '0.99', '0.97', '0.97', '0.93', '0.93', '0.99', '0.93', '0.90', '0.99', '0.95', '0.10', '1.00', '0.97', '0.09', '0.97', '0.81', '0.93', '0.63', '0.99', '0.93', '0.93', '0.99', '0.99', '0.99', '0.97', '0.97', '0.08', '0.97', '0.97', '0.96', '0.81', '0.89', '0.99', '0.93', '0.90', '0.97', '0.90', '0.93', '0.97', '1.00', '0.99', '0.97', '0.93', '0.90', '0.97', '0.93', '0.99', '0.95', '0.08', '0.93', '0.09', '0.97', '0.09', '0.95', '0.81', '1.00', '0.93', '0.99', '0.93', '0.93', '0.81', '0.81', '0.08', '0.93', '0.98', '0.93', '0.99', '0.81', '0.99', '0.90', '0.93', '0.97', '0.09', '0.99', '0.99', '0.99', '0.97', '0.93', '0.93', '1.00', '0.08', '0.81', '0.81', '0.99', '0.14', '0.97', '0.93', '0.99', '0.98', '0.99', '0.90', '0.93', '0.93', '0.97', '0.98', '0.10', '0.99', '0.93', '0.93', '0.99', '0.99', '0.93', '0.97', '0.97', '0.97', '0.93', '0.95', '0.79', '0.97', '0.93', '0.97', '0.88', '0.93', '0.93', '0.97', '0.97', '0.92', '0.81', '0.97', '0.93', '0.97', '0.08', '0.97', '0.98', '0.95', '0.93', '0.97', '0.10', '0.99', '0.81', '0.08', '0.99', '0.93', '0.93', '0.93', '0.99', '0.93', '0.99', '0.72', '0.99', '0.99', '0.97', '0.93', '0.97', '0.99', '0.93', '0.90', '0.89', '0.93', '0.90', '0.08', '0.99', '0.93', '0.97', '0.79', '0.99', '0.93']
"""